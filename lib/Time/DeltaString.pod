=head1 NAME

Time::DeltaString - A time interval format (2d4h1m4s) like convert_time() from Lima mudlib.

=head1 SYNOPSIS

    use Time::DeltaString qw/delta_string/;

    my $d1 = delta_string( "127:34" ); # 1h40m
    my $d2 = delta_string("2:46:40" ); # 2h46m40s
    my $d3 = delta_string( 7654321 );  # 2mo4w14h12m1s

=head1 ALTERNATE CONVERSIONS

There are a few prebuilt conversions you can use.

    use Time::DeltaString qw(:all);

=over 4

=item C<nomonth_conversions()> eliminates the month conversion.

    nomonth_conversions();

    my $d4 = delta_string( 7654321 );  # 12w4d14h12m1s

=item C<weeklargest_conversions()> eliminates both the year and the month conversion.

    weeklargest_conversions();

    my $d5 = delta_string( 7654321 );  # 12w4d14h12m1s

=item C<@Time::DeltaString::conversions>

There will obviously be some disagreement about how long a "week" or a "month"
is.  You can define your own in this way:

    @Time::DeltaString::conversions = (
        [ d => 86400 ], # days are 86400 seconds
        [ E => 1337 ], # elite time unit
        [ m => 60 ], # minutes are 60 seconds
        [ s => 1 ], # seconds are 1 second
    );

    my $weird = delta_string( 7777777 ); # 90d1E7m20s

=back

This will not work right unless the largest units are first.  It's up to you to
make sure they're ordered largest to smallest.

=head1 AUTHORS

C<< <dorn@bakhara.org> >> -- Updated, maintained and republished this module.

C<< <nichus@bakhara.org> >> -- Wrote the initial version.

This module is now being maintained by Paul Miller C<< <jettero@cpan.org> >>.

=head1 COPYRIGHT

Copyright 1997-2009 Dorn, Nichus, Paul Miller, Orien Vandenburg -- licensed under LGPL

=head1 NOTE

C<convert_time()> was technically written by cowl originally, but it exists in
its present form because of beek.

=head1 SEE ALSO

perl(1).

=cut
